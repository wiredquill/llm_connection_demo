apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: llm-connection-suse # ✔ Namespace specified
  name: ollama # ✔ Name is fine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      # This initContainer will run and complete BEFORE the main ollama container starts.
      initContainers:
      - name: ollama-init
        image: dp.apps.rancher.io/containers/ollama:0.6.8 # Use the same ollama image
        # This command starts the ollama server in the background (&), waits 5 seconds
        # for it to initialize, and then runs the pull command.
        command: ["/bin/sh", "-c", "ollama serve & sleep 5 && ollama pull tinyllama:latest"]
        # It needs access to the same volume to store the downloaded model.
        volumeMounts:
        - name: ollama-models
          mountPath: /root/.ollama
        # You can also add resource requests/limits here if the pull is resource intensive
        resources:
          limits:
            memory: "4Gi"
            cpu: "2"
      containers:
      - name: ollama
        image: ollama/ollama:0.6.8
        ports:
        - containerPort: 11434
          name: http
        volumeMounts:
        - name: ollama-models
          mountPath: /root/.ollama
        resources:
          requests:
            memory: "2Gi"
            cpu: "2"
          limits:
            memory: "16Gi"
            cpu: "4"
        readinessProbe:
          httpGet:
            path: /
            port: 11434
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 11434
          initialDelaySeconds: 30 # Increased slightly to be safe
          periodSeconds: 30
      volumes:
      - name: ollama-models
        emptyDir: {}
      imagePullSecrets: [application-collection]
